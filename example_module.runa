
module std.libc.stdio {
    def printf(s: string, ...args) -> int {
        return __libc_printf(s, args) //primite that automatically binds to c printf inside the runtime
    }

    // ... and other stdio stuff.
}

module std.io {
    use std.libc.stdio;

    @core
    def print(s: string) -> void {
        std.libc.stdio.printf(s);
    }.
}

module std.libc.string {
    def strcmp(s1: string, s2:string) -> int {
        return __libc_strcmp(s1, s2) //primite that automatically binds to c strcmp inside the runtime
    }

    // ... and other string.h stuff.
}


module std.libc.string {
    def strcmp(s1: string, s2:string) -> int {
        return __libc_strcmp(s1, s2) //primite that automatically binds to c strcmp inside the runtime
    }

    // ... and other string.h stuff.
}